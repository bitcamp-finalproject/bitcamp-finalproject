[{"C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\index.js":"1","C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\App.js":"2","C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Test1.js":"3","C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Feed.js":"4","C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Profile.js":"5","C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\components\\Navbar.js":"6","C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\components\\Footer.js":"7","C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Images.js":"8","C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Home.js":"9"},{"size":352,"mtime":1680092340387,"results":"10","hashOfConfig":"11"},{"size":817,"mtime":1680092193961,"results":"12","hashOfConfig":"11"},{"size":1202,"mtime":1680074092241,"results":"13","hashOfConfig":"11"},{"size":2269,"mtime":1680076112934,"results":"14","hashOfConfig":"11"},{"size":183,"mtime":1680074092241,"results":"15","hashOfConfig":"11"},{"size":4186,"mtime":1680092059421,"results":"16","hashOfConfig":"11"},{"size":353,"mtime":1680092025737,"results":"17","hashOfConfig":"11"},{"size":1963,"mtime":1680092142692,"results":"18","hashOfConfig":"11"},{"size":1031,"mtime":1680092271308,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tvpdyn",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\index.js",[],[],"C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\App.js",["49"],[],"C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Test1.js",[],[],[],"C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Feed.js",["50","51"],[],"C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Profile.js",[],[],"C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\components\\Navbar.js",["52","53"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport \"./Navbar.css\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true; // SpringBoot + axios 사용 관련 AuthController 에서 HttpSession 동일 객체 사용을 위한 설정\r\n\r\nfunction Navbar() {\r\n  let [currentUser, setCurrentUser] = useState(\"\");\r\n\r\n  const AuthBtn = () => {\r\n    if (currentUser === \"\") {\r\n      return (\r\n        <Login currentUser={currentUser} setCurrentUser={setCurrentUser} />\r\n      );\r\n    } else {\r\n      return (\r\n        <Logout currentUser={currentUser} setCurrentUser={setCurrentUser} />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"nav-bar\">\r\n      <Link to=\"/\">\r\n        <h1 id=\"title\">Artify</h1>\r\n      </Link>\r\n      <Link to=\"/Feed/\">\r\n        <h1 id=\"title\">Feed</h1>\r\n      </Link>\r\n      <Link to=\"/Profile\">\r\n        <h1 id=\"title\">Profile</h1>\r\n      </Link>\r\n      <div id=\"modal-back\">\r\n        <AuthBtn />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Logout(props) {\r\n  let [currentUser, setCurrentUser] = [useState(props.currentUser)];\r\n  setCurrentUser = props.setCurrentUser;\r\n\r\n  const handleLogoutClick = () => {\r\n    axios\r\n      .get(\"http://localhost:8080/auth/logout\")\r\n      .then((response) => {\r\n        setCurrentUser(\"\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"로그아웃 중 오류 발생!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p id=\"logout-btn\" onClick={handleLogoutClick}>\r\n        Logout\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Login(props) {\r\n  const [show, setShow] = useState(false);\r\n  let [currentUser, setCurrentUser] = [useState(props.currentUser)];\r\n  setCurrentUser = props.setCurrentUser;\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const ShowUser = () => {\r\n    axios\r\n      .get(\"http://localhost:8080/auth/user\")\r\n      .then((response) => {\r\n        setCurrentUser(response.data.data.nickname);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"로그인 유저 가져오는 중 오류 발생!\");\r\n      });\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/auth/login\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.status === \"success\") {\r\n          ShowUser();\r\n          handleClose();\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(\"로그인 중 오류 발생\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p id=\"login-btn\" onClick={handleShow}>\r\n        Login\r\n      </p>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        centered\r\n        style={{ width: \"100%\", height: \"100%\", backgroundColor: \"#00000000\" }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-dark\">반갑습니다!</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n              <Form.Label className=\"text-dark\">\r\n                사용자의 이메일 주소를 입력해주세요\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"name@example.com\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n              <Form.Label className=\"text-dark\">\r\n                사용자의 비밀번호를 입력해주세요\r\n              </Form.Label>\r\n              <Form.Control type=\"password\" name=\"password\" />\r\n            </Form.Group>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\components\\Footer.js",[],[],"C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Images.js",[],[],"C:\\Users\\bitcamp\\git\\bitcamp-finalproject\\total\\final\\src\\main\\resources\\front-end\\src\\pages\\Home.js",["54"],[],{"ruleId":"55","severity":1,"message":"56","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":29,"column":6,"nodeType":"61","endLine":29,"endColumn":8,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"60","line":43,"column":6,"nodeType":"61","endLine":43,"endColumn":12,"suggestions":"63"},{"ruleId":"55","severity":1,"message":"64","line":43,"column":8,"nodeType":"57","messageId":"58","endLine":43,"endColumn":19},{"ruleId":"55","severity":1,"message":"64","line":68,"column":8,"nodeType":"57","messageId":"58","endLine":68,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":23,"column":13,"nodeType":"67","endLine":27,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["68"],["69"],"'currentUser' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [loadData]",{"range":"74","text":"75"},"Update the dependencies array to be: [data, loadData]",{"range":"76","text":"77"},[634,636],"[loadData]",[916,922],"[data, loadData]"]